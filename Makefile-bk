# Thanks to Job Vranish (https://spin.atomicobject.com/2016/08/26/makefile-c-projects/)
TARGET_EXEC := final_program

CC = gcc
CFLAGS = -Wall -g -lm

BUILD_DIR := ./build
BUILD_TESTS_DIR := ./build/tests
BUILD_EXAMPLES_DIR := ./build/examples
SRC_DIRS := ./src
TEST_DIRS := ./tests
EXAMPLE_DIRS := ./examples

# Find all the C and C++ files we want to compile
# Note the single quotes around the * expressions. Make will incorrectly expand these otherwise.
SRCS := $(shell find $(SRC_DIRS) -name '*.cpp' -or -name '*.c' -or -name '*.s')
TESTS := $(shell find $(TEST_DIRS) -name '*.cpp' -or -name '*.c' -or -name '*.s')
EXAMPLES := $(shell find $(EXAMPLE_DIRS) -name '*.cpp' -or -name '*.c' -or -name '*.s')

TEST_C_EXECUTABLE :=$(TESTS:.c=)
EXAMPLE_C_EXECUTABLE :=$(EXAMPLES:.c=)
C_EXECUTABLE :=$(SRCS:.c=)

# Every folder in ./src will need to be passed to GCC so that it can find header files
INC_DIRS := $(shell find $(SRC_DIRS) -type d)
# Add a prefix to INC_DIRS. So moduleA would become -ImoduleA. GCC understands this -I flag
INC_FLAGS := $(addprefix -I,$(INC_DIRS))

# The -MMD and -MP flags together generate Makefiles for us!
# These files will have .d instead of .o as the output.
CPPFLAGS := $(INC_FLAGS) -MMD -MP

#testBinary:
#	mkdir -p $(BUILD_TESTS_DIR)
#	$(CC) $(CPPFLAGS) tests/test_binary.c $(SRCS) $(CFLAGS) -o $(BUILD_TESTS_DIR)/test_binary -lcmocka

tests: $(TEST_C_EXECUTABLE)

$(TEST_C_EXECUTABLE):$(TESTS)
	mkdir -p $(BUILD_TESTS_DIR)
	$(CC) $(CPPFLAGS) $@.c $(SRCS) $(CFLAGS) -o $(BUILD_DIR)/$@ -lcmocka

examples: $(EXAMPLE_C_EXECUTABLE)

$(EXAMPLE_C_EXECUTABLE):$(EXAMPLES)
	mkdir -p $(BUILD_EXAMPLES_DIR)
	$(CC) $(CPPFLAGS) $@.c $(SRCS) $(CFLAGS) -o $(BUILD_DIR)/$@ -lcmocka

test_binary: binary.o $(TEST_DIRS)/test_binary.c
	$(CC) $(CPPFLAGS) $(CFLAGS) $^ -o test_binary -lcmocka

binary.o: $(SRC_DIRS)/source/binary/binary.c
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $^ -o $@ 

.PHONY: clean
clean:
	rm -r $(BUILD_DIR)
